"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var types = _interopRequireWildcard(require("../../types"));

var _utils = require("../../utils");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Matches a string that ends in a . character, optionally followed by a sequence of
// digits followed by any number of 0 characters up until the end of the line.
// Ensuring that there is at least one prefixed character is important so that
// you don't incorrectly match against "0".
var trailingCharMatcherWithPrefix = /\.([0-9]*0)*$/; // This is used for trimming the trailing 0 and . characters without affecting
// the rest of the string. Its possible to use one RegEx with groups for this
// functionality, but it is fairly complex compared to simply defining two
// different matchers.

var trailingCharMatcher = /[0.]0*$/;
/**
 * The NumberField class has some special handling for dealing with trailing
 * decimal points and/or zeroes. This logic is designed to allow trailing values
 * to be visible in the input element, but not be represented in the
 * corresponding form data.
 *
 * The algorithm is as follows:
 *
 * 1. When the input value changes the value is cached in the component state
 *
 * 2. The value is then normalized, removing trailing decimal points and zeros,
 *    then passed to the "onChange" callback
 *
 * 3. When the component is rendered, the formData value is checked against the
 *    value cached in the state. If it matches the cached value, the cached
 *    value is passed to the input instead of the formData value
 */

var NumberField =
/*#__PURE__*/
function (_React$Component) {
  _inherits(NumberField, _React$Component);

  function NumberField(props) {
    var _this;

    _classCallCheck(this, NumberField);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(NumberField).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "handleChange", function (value) {
      // Cache the original value in component state
      _this.setState({
        lastValue: value
      }); // Normalize decimals that don't start with a zero character in advance so
      // that the rest of the normalization logic is simpler


      if ("".concat(value).charAt(0) === ".") {
        value = "0".concat(value);
      } // Check that the value is a string (this can happen if the widget used is a
      // <select>, due to an enum declaration etc) then, if the value ends in a
      // trailing decimal point or multiple zeroes, strip the trailing values


      var processed = typeof value === "string" && value.match(trailingCharMatcherWithPrefix) ? (0, _utils.asNumber)(value.replace(trailingCharMatcher, "")) : (0, _utils.asNumber)(value);

      _this.props.onChange(processed);
    });

    _this.state = {
      lastValue: props.value
    };
    return _this;
  }

  _createClass(NumberField, [{
    key: "render",
    value: function render() {
      var StringField = this.props.registry.fields.StringField;

      var _this$props = this.props,
          formData = _this$props.formData,
          props = _objectWithoutProperties(_this$props, ["formData"]);

      var lastValue = this.state.lastValue;
      var value = formData;

      if (typeof lastValue === "string" && typeof value === "number") {
        // Construct a regular expression that checks for a string that consists
        // of the formData value suffixed with zero or one '.' characters and zero
        // or more '0' characters
        var re = new RegExp("".concat(value).replace(".", "\\.") + "\\.?0*$"); // If the cached "lastValue" is a match, use that instead of the formData
        // value to prevent the input value from changing in the UI

        if (lastValue.match(re)) {
          value = lastValue;
        }
      }

      return (
        /*#__PURE__*/
        _react["default"].createElement(StringField, _extends({}, props, {
          formData: value,
          onChange: this.handleChange
        }))
      );
    }
  }]);

  return NumberField;
}(_react["default"].Component);

if (process.env.NODE_ENV !== "production") {
  NumberField.propTypes = types.fieldProps;
}

NumberField.defaultProps = {
  uiSchema: {}
};
var _default = NumberField;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2ZpZWxkcy9OdW1iZXJGaWVsZC5qcyJdLCJuYW1lcyI6WyJ0cmFpbGluZ0NoYXJNYXRjaGVyV2l0aFByZWZpeCIsInRyYWlsaW5nQ2hhck1hdGNoZXIiLCJOdW1iZXJGaWVsZCIsInByb3BzIiwidmFsdWUiLCJzZXRTdGF0ZSIsImxhc3RWYWx1ZSIsImNoYXJBdCIsInByb2Nlc3NlZCIsIm1hdGNoIiwicmVwbGFjZSIsIm9uQ2hhbmdlIiwic3RhdGUiLCJTdHJpbmdGaWVsZCIsInJlZ2lzdHJ5IiwiZmllbGRzIiwiZm9ybURhdGEiLCJyZSIsIlJlZ0V4cCIsImhhbmRsZUNoYW5nZSIsIlJlYWN0IiwiQ29tcG9uZW50IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwicHJvcFR5cGVzIiwidHlwZXMiLCJmaWVsZFByb3BzIiwiZGVmYXVsdFByb3BzIiwidWlTY2hlbWEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1BLDZCQUE2QixHQUFHLGVBQXRDLEMsQ0FFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSxJQUFNQyxtQkFBbUIsR0FBRyxTQUE1QjtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFpQk1DLFc7Ozs7O0FBQ0osdUJBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQTs7QUFDakIscUZBQU1BLEtBQU47O0FBRGlCLG1FQVFKLFVBQUFDLEtBQUssRUFBSTtBQUN0QjtBQUNBLFlBQUtDLFFBQUwsQ0FBYztBQUFFQyxRQUFBQSxTQUFTLEVBQUVGO0FBQWIsT0FBZCxFQUZzQixDQUl0QjtBQUNBOzs7QUFDQSxVQUFJLFVBQUdBLEtBQUgsRUFBV0csTUFBWCxDQUFrQixDQUFsQixNQUF5QixHQUE3QixFQUFrQztBQUNoQ0gsUUFBQUEsS0FBSyxjQUFPQSxLQUFQLENBQUw7QUFDRCxPQVJxQixDQVV0QjtBQUNBO0FBQ0E7OztBQUNBLFVBQUlJLFNBQVMsR0FDWCxPQUFPSixLQUFQLEtBQWlCLFFBQWpCLElBQTZCQSxLQUFLLENBQUNLLEtBQU4sQ0FBWVQsNkJBQVosQ0FBN0IsR0FDSSxxQkFBU0ksS0FBSyxDQUFDTSxPQUFOLENBQWNULG1CQUFkLEVBQW1DLEVBQW5DLENBQVQsQ0FESixHQUVJLHFCQUFTRyxLQUFULENBSE47O0FBS0EsWUFBS0QsS0FBTCxDQUFXUSxRQUFYLENBQW9CSCxTQUFwQjtBQUNELEtBM0JrQjs7QUFHakIsVUFBS0ksS0FBTCxHQUFhO0FBQ1hOLE1BQUFBLFNBQVMsRUFBRUgsS0FBSyxDQUFDQztBQUROLEtBQWI7QUFIaUI7QUFNbEI7Ozs7NkJBdUJRO0FBQUEsVUFDQ1MsV0FERCxHQUNpQixLQUFLVixLQUFMLENBQVdXLFFBQVgsQ0FBb0JDLE1BRHJDLENBQ0NGLFdBREQ7O0FBQUEsd0JBRXdCLEtBQUtWLEtBRjdCO0FBQUEsVUFFQ2EsUUFGRCxlQUVDQSxRQUZEO0FBQUEsVUFFY2IsS0FGZDs7QUFBQSxVQUdDRyxTQUhELEdBR2UsS0FBS00sS0FIcEIsQ0FHQ04sU0FIRDtBQUtQLFVBQUlGLEtBQUssR0FBR1ksUUFBWjs7QUFFQSxVQUFJLE9BQU9WLFNBQVAsS0FBcUIsUUFBckIsSUFBaUMsT0FBT0YsS0FBUCxLQUFpQixRQUF0RCxFQUFnRTtBQUM5RDtBQUNBO0FBQ0E7QUFDQSxZQUFNYSxFQUFFLEdBQUcsSUFBSUMsTUFBSixDQUFXLFVBQUdkLEtBQUgsRUFBV00sT0FBWCxDQUFtQixHQUFuQixFQUF3QixLQUF4QixJQUFpQyxTQUE1QyxDQUFYLENBSjhELENBTTlEO0FBQ0E7O0FBQ0EsWUFBSUosU0FBUyxDQUFDRyxLQUFWLENBQWdCUSxFQUFoQixDQUFKLEVBQXlCO0FBQ3ZCYixVQUFBQSxLQUFLLEdBQUdFLFNBQVI7QUFDRDtBQUNGOztBQUVEO0FBQUE7QUFDRSx3Q0FBQyxXQUFELGVBQWlCSCxLQUFqQjtBQUF3QixVQUFBLFFBQVEsRUFBRUMsS0FBbEM7QUFBeUMsVUFBQSxRQUFRLEVBQUUsS0FBS2U7QUFBeEQ7QUFERjtBQUdEOzs7O0VBckR1QkMsa0JBQU1DLFM7O0FBd0RoQyxJQUFJQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixLQUF5QixZQUE3QixFQUEyQztBQUN6Q3RCLEVBQUFBLFdBQVcsQ0FBQ3VCLFNBQVosR0FBd0JDLEtBQUssQ0FBQ0MsVUFBOUI7QUFDRDs7QUFFRHpCLFdBQVcsQ0FBQzBCLFlBQVosR0FBMkI7QUFDekJDLEVBQUFBLFFBQVEsRUFBRTtBQURlLENBQTNCO2VBSWUzQixXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgKiBhcyB0eXBlcyBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcbmltcG9ydCB7IGFzTnVtYmVyIH0gZnJvbSBcIi4uLy4uL3V0aWxzXCI7XG5cbi8vIE1hdGNoZXMgYSBzdHJpbmcgdGhhdCBlbmRzIGluIGEgLiBjaGFyYWN0ZXIsIG9wdGlvbmFsbHkgZm9sbG93ZWQgYnkgYSBzZXF1ZW5jZSBvZlxuLy8gZGlnaXRzIGZvbGxvd2VkIGJ5IGFueSBudW1iZXIgb2YgMCBjaGFyYWN0ZXJzIHVwIHVudGlsIHRoZSBlbmQgb2YgdGhlIGxpbmUuXG4vLyBFbnN1cmluZyB0aGF0IHRoZXJlIGlzIGF0IGxlYXN0IG9uZSBwcmVmaXhlZCBjaGFyYWN0ZXIgaXMgaW1wb3J0YW50IHNvIHRoYXRcbi8vIHlvdSBkb24ndCBpbmNvcnJlY3RseSBtYXRjaCBhZ2FpbnN0IFwiMFwiLlxuY29uc3QgdHJhaWxpbmdDaGFyTWF0Y2hlcldpdGhQcmVmaXggPSAvXFwuKFswLTldKjApKiQvO1xuXG4vLyBUaGlzIGlzIHVzZWQgZm9yIHRyaW1taW5nIHRoZSB0cmFpbGluZyAwIGFuZCAuIGNoYXJhY3RlcnMgd2l0aG91dCBhZmZlY3Rpbmdcbi8vIHRoZSByZXN0IG9mIHRoZSBzdHJpbmcuIEl0cyBwb3NzaWJsZSB0byB1c2Ugb25lIFJlZ0V4IHdpdGggZ3JvdXBzIGZvciB0aGlzXG4vLyBmdW5jdGlvbmFsaXR5LCBidXQgaXQgaXMgZmFpcmx5IGNvbXBsZXggY29tcGFyZWQgdG8gc2ltcGx5IGRlZmluaW5nIHR3b1xuLy8gZGlmZmVyZW50IG1hdGNoZXJzLlxuY29uc3QgdHJhaWxpbmdDaGFyTWF0Y2hlciA9IC9bMC5dMCokLztcblxuLyoqXG4gKiBUaGUgTnVtYmVyRmllbGQgY2xhc3MgaGFzIHNvbWUgc3BlY2lhbCBoYW5kbGluZyBmb3IgZGVhbGluZyB3aXRoIHRyYWlsaW5nXG4gKiBkZWNpbWFsIHBvaW50cyBhbmQvb3IgemVyb2VzLiBUaGlzIGxvZ2ljIGlzIGRlc2lnbmVkIHRvIGFsbG93IHRyYWlsaW5nIHZhbHVlc1xuICogdG8gYmUgdmlzaWJsZSBpbiB0aGUgaW5wdXQgZWxlbWVudCwgYnV0IG5vdCBiZSByZXByZXNlbnRlZCBpbiB0aGVcbiAqIGNvcnJlc3BvbmRpbmcgZm9ybSBkYXRhLlxuICpcbiAqIFRoZSBhbGdvcml0aG0gaXMgYXMgZm9sbG93czpcbiAqXG4gKiAxLiBXaGVuIHRoZSBpbnB1dCB2YWx1ZSBjaGFuZ2VzIHRoZSB2YWx1ZSBpcyBjYWNoZWQgaW4gdGhlIGNvbXBvbmVudCBzdGF0ZVxuICpcbiAqIDIuIFRoZSB2YWx1ZSBpcyB0aGVuIG5vcm1hbGl6ZWQsIHJlbW92aW5nIHRyYWlsaW5nIGRlY2ltYWwgcG9pbnRzIGFuZCB6ZXJvcyxcbiAqICAgIHRoZW4gcGFzc2VkIHRvIHRoZSBcIm9uQ2hhbmdlXCIgY2FsbGJhY2tcbiAqXG4gKiAzLiBXaGVuIHRoZSBjb21wb25lbnQgaXMgcmVuZGVyZWQsIHRoZSBmb3JtRGF0YSB2YWx1ZSBpcyBjaGVja2VkIGFnYWluc3QgdGhlXG4gKiAgICB2YWx1ZSBjYWNoZWQgaW4gdGhlIHN0YXRlLiBJZiBpdCBtYXRjaGVzIHRoZSBjYWNoZWQgdmFsdWUsIHRoZSBjYWNoZWRcbiAqICAgIHZhbHVlIGlzIHBhc3NlZCB0byB0aGUgaW5wdXQgaW5zdGVhZCBvZiB0aGUgZm9ybURhdGEgdmFsdWVcbiAqL1xuY2xhc3MgTnVtYmVyRmllbGQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBsYXN0VmFsdWU6IHByb3BzLnZhbHVlLFxuICAgIH07XG4gIH1cblxuICBoYW5kbGVDaGFuZ2UgPSB2YWx1ZSA9PiB7XG4gICAgLy8gQ2FjaGUgdGhlIG9yaWdpbmFsIHZhbHVlIGluIGNvbXBvbmVudCBzdGF0ZVxuICAgIHRoaXMuc2V0U3RhdGUoeyBsYXN0VmFsdWU6IHZhbHVlIH0pO1xuXG4gICAgLy8gTm9ybWFsaXplIGRlY2ltYWxzIHRoYXQgZG9uJ3Qgc3RhcnQgd2l0aCBhIHplcm8gY2hhcmFjdGVyIGluIGFkdmFuY2Ugc29cbiAgICAvLyB0aGF0IHRoZSByZXN0IG9mIHRoZSBub3JtYWxpemF0aW9uIGxvZ2ljIGlzIHNpbXBsZXJcbiAgICBpZiAoYCR7dmFsdWV9YC5jaGFyQXQoMCkgPT09IFwiLlwiKSB7XG4gICAgICB2YWx1ZSA9IGAwJHt2YWx1ZX1gO1xuICAgIH1cblxuICAgIC8vIENoZWNrIHRoYXQgdGhlIHZhbHVlIGlzIGEgc3RyaW5nICh0aGlzIGNhbiBoYXBwZW4gaWYgdGhlIHdpZGdldCB1c2VkIGlzIGFcbiAgICAvLyA8c2VsZWN0PiwgZHVlIHRvIGFuIGVudW0gZGVjbGFyYXRpb24gZXRjKSB0aGVuLCBpZiB0aGUgdmFsdWUgZW5kcyBpbiBhXG4gICAgLy8gdHJhaWxpbmcgZGVjaW1hbCBwb2ludCBvciBtdWx0aXBsZSB6ZXJvZXMsIHN0cmlwIHRoZSB0cmFpbGluZyB2YWx1ZXNcbiAgICBsZXQgcHJvY2Vzc2VkID1cbiAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJiB2YWx1ZS5tYXRjaCh0cmFpbGluZ0NoYXJNYXRjaGVyV2l0aFByZWZpeClcbiAgICAgICAgPyBhc051bWJlcih2YWx1ZS5yZXBsYWNlKHRyYWlsaW5nQ2hhck1hdGNoZXIsIFwiXCIpKVxuICAgICAgICA6IGFzTnVtYmVyKHZhbHVlKTtcblxuICAgIHRoaXMucHJvcHMub25DaGFuZ2UocHJvY2Vzc2VkKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBTdHJpbmdGaWVsZCB9ID0gdGhpcy5wcm9wcy5yZWdpc3RyeS5maWVsZHM7XG4gICAgY29uc3QgeyBmb3JtRGF0YSwgLi4ucHJvcHMgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBsYXN0VmFsdWUgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICBsZXQgdmFsdWUgPSBmb3JtRGF0YTtcblxuICAgIGlmICh0eXBlb2YgbGFzdFZhbHVlID09PSBcInN0cmluZ1wiICYmIHR5cGVvZiB2YWx1ZSA9PT0gXCJudW1iZXJcIikge1xuICAgICAgLy8gQ29uc3RydWN0IGEgcmVndWxhciBleHByZXNzaW9uIHRoYXQgY2hlY2tzIGZvciBhIHN0cmluZyB0aGF0IGNvbnNpc3RzXG4gICAgICAvLyBvZiB0aGUgZm9ybURhdGEgdmFsdWUgc3VmZml4ZWQgd2l0aCB6ZXJvIG9yIG9uZSAnLicgY2hhcmFjdGVycyBhbmQgemVyb1xuICAgICAgLy8gb3IgbW9yZSAnMCcgY2hhcmFjdGVyc1xuICAgICAgY29uc3QgcmUgPSBuZXcgUmVnRXhwKGAke3ZhbHVlfWAucmVwbGFjZShcIi5cIiwgXCJcXFxcLlwiKSArIFwiXFxcXC4/MCokXCIpO1xuXG4gICAgICAvLyBJZiB0aGUgY2FjaGVkIFwibGFzdFZhbHVlXCIgaXMgYSBtYXRjaCwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgZm9ybURhdGFcbiAgICAgIC8vIHZhbHVlIHRvIHByZXZlbnQgdGhlIGlucHV0IHZhbHVlIGZyb20gY2hhbmdpbmcgaW4gdGhlIFVJXG4gICAgICBpZiAobGFzdFZhbHVlLm1hdGNoKHJlKSkge1xuICAgICAgICB2YWx1ZSA9IGxhc3RWYWx1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFN0cmluZ0ZpZWxkIHsuLi5wcm9wc30gZm9ybURhdGE9e3ZhbHVlfSBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9IC8+XG4gICAgKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE51bWJlckZpZWxkLnByb3BUeXBlcyA9IHR5cGVzLmZpZWxkUHJvcHM7XG59XG5cbk51bWJlckZpZWxkLmRlZmF1bHRQcm9wcyA9IHtcbiAgdWlTY2hlbWE6IHt9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTnVtYmVyRmllbGQ7XG4iXX0=