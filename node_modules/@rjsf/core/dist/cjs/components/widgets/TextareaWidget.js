"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function TextareaWidget(props) {
  var id = props.id,
      options = props.options,
      placeholder = props.placeholder,
      value = props.value,
      required = props.required,
      disabled = props.disabled,
      readonly = props.readonly,
      autofocus = props.autofocus,
      onChange = props.onChange,
      onBlur = props.onBlur,
      onFocus = props.onFocus;

  var _onChange = function _onChange(_ref) {
    var value = _ref.target.value;
    return onChange(value === "" ? options.emptyValue : value);
  };

  return (
    /*#__PURE__*/
    _react["default"].createElement("textarea", {
      id: id,
      className: "form-control",
      value: value ? value : "",
      placeholder: placeholder,
      required: required,
      disabled: disabled,
      readOnly: readonly,
      autoFocus: autofocus,
      rows: options.rows,
      onBlur: onBlur && function (event) {
        return onBlur(id, event.target.value);
      },
      onFocus: onFocus && function (event) {
        return onFocus(id, event.target.value);
      },
      onChange: _onChange
    })
  );
}

TextareaWidget.defaultProps = {
  autofocus: false,
  options: {}
};

if (process.env.NODE_ENV !== "production") {
  TextareaWidget.propTypes = {
    schema: _propTypes["default"].object.isRequired,
    id: _propTypes["default"].string.isRequired,
    placeholder: _propTypes["default"].string,
    options: _propTypes["default"].shape({
      rows: _propTypes["default"].number
    }),
    value: _propTypes["default"].string,
    required: _propTypes["default"].bool,
    disabled: _propTypes["default"].bool,
    readonly: _propTypes["default"].bool,
    autofocus: _propTypes["default"].bool,
    onChange: _propTypes["default"].func,
    onBlur: _propTypes["default"].func,
    onFocus: _propTypes["default"].func
  };
}

var _default = TextareaWidget;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvVGV4dGFyZWFXaWRnZXQuanMiXSwibmFtZXMiOlsiVGV4dGFyZWFXaWRnZXQiLCJwcm9wcyIsImlkIiwib3B0aW9ucyIsInBsYWNlaG9sZGVyIiwidmFsdWUiLCJyZXF1aXJlZCIsImRpc2FibGVkIiwicmVhZG9ubHkiLCJhdXRvZm9jdXMiLCJvbkNoYW5nZSIsIm9uQmx1ciIsIm9uRm9jdXMiLCJfb25DaGFuZ2UiLCJ0YXJnZXQiLCJlbXB0eVZhbHVlIiwicm93cyIsImV2ZW50IiwiZGVmYXVsdFByb3BzIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwicHJvcFR5cGVzIiwic2NoZW1hIiwiUHJvcFR5cGVzIiwib2JqZWN0IiwiaXNSZXF1aXJlZCIsInN0cmluZyIsInNoYXBlIiwibnVtYmVyIiwiYm9vbCIsImZ1bmMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBLFNBQVNBLGNBQVQsQ0FBd0JDLEtBQXhCLEVBQStCO0FBQUEsTUFFM0JDLEVBRjJCLEdBYXpCRCxLQWJ5QixDQUUzQkMsRUFGMkI7QUFBQSxNQUczQkMsT0FIMkIsR0FhekJGLEtBYnlCLENBRzNCRSxPQUgyQjtBQUFBLE1BSTNCQyxXQUoyQixHQWF6QkgsS0FieUIsQ0FJM0JHLFdBSjJCO0FBQUEsTUFLM0JDLEtBTDJCLEdBYXpCSixLQWJ5QixDQUszQkksS0FMMkI7QUFBQSxNQU0zQkMsUUFOMkIsR0FhekJMLEtBYnlCLENBTTNCSyxRQU4yQjtBQUFBLE1BTzNCQyxRQVAyQixHQWF6Qk4sS0FieUIsQ0FPM0JNLFFBUDJCO0FBQUEsTUFRM0JDLFFBUjJCLEdBYXpCUCxLQWJ5QixDQVEzQk8sUUFSMkI7QUFBQSxNQVMzQkMsU0FUMkIsR0FhekJSLEtBYnlCLENBUzNCUSxTQVQyQjtBQUFBLE1BVTNCQyxRQVYyQixHQWF6QlQsS0FieUIsQ0FVM0JTLFFBVjJCO0FBQUEsTUFXM0JDLE1BWDJCLEdBYXpCVixLQWJ5QixDQVczQlUsTUFYMkI7QUFBQSxNQVkzQkMsT0FaMkIsR0FhekJYLEtBYnlCLENBWTNCVyxPQVoyQjs7QUFjN0IsTUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVksT0FBMkI7QUFBQSxRQUFkUixLQUFjLFFBQXhCUyxNQUF3QixDQUFkVCxLQUFjO0FBQzNDLFdBQU9LLFFBQVEsQ0FBQ0wsS0FBSyxLQUFLLEVBQVYsR0FBZUYsT0FBTyxDQUFDWSxVQUF2QixHQUFvQ1YsS0FBckMsQ0FBZjtBQUNELEdBRkQ7O0FBR0E7QUFBQTtBQUNFO0FBQ0UsTUFBQSxFQUFFLEVBQUVILEVBRE47QUFFRSxNQUFBLFNBQVMsRUFBQyxjQUZaO0FBR0UsTUFBQSxLQUFLLEVBQUVHLEtBQUssR0FBR0EsS0FBSCxHQUFXLEVBSHpCO0FBSUUsTUFBQSxXQUFXLEVBQUVELFdBSmY7QUFLRSxNQUFBLFFBQVEsRUFBRUUsUUFMWjtBQU1FLE1BQUEsUUFBUSxFQUFFQyxRQU5aO0FBT0UsTUFBQSxRQUFRLEVBQUVDLFFBUFo7QUFRRSxNQUFBLFNBQVMsRUFBRUMsU0FSYjtBQVNFLE1BQUEsSUFBSSxFQUFFTixPQUFPLENBQUNhLElBVGhCO0FBVUUsTUFBQSxNQUFNLEVBQUVMLE1BQU0sSUFBSyxVQUFBTSxLQUFLO0FBQUEsZUFBSU4sTUFBTSxDQUFDVCxFQUFELEVBQUtlLEtBQUssQ0FBQ0gsTUFBTixDQUFhVCxLQUFsQixDQUFWO0FBQUEsT0FWMUI7QUFXRSxNQUFBLE9BQU8sRUFBRU8sT0FBTyxJQUFLLFVBQUFLLEtBQUs7QUFBQSxlQUFJTCxPQUFPLENBQUNWLEVBQUQsRUFBS2UsS0FBSyxDQUFDSCxNQUFOLENBQWFULEtBQWxCLENBQVg7QUFBQSxPQVg1QjtBQVlFLE1BQUEsUUFBUSxFQUFFUTtBQVpaO0FBREY7QUFnQkQ7O0FBRURiLGNBQWMsQ0FBQ2tCLFlBQWYsR0FBOEI7QUFDNUJULEVBQUFBLFNBQVMsRUFBRSxLQURpQjtBQUU1Qk4sRUFBQUEsT0FBTyxFQUFFO0FBRm1CLENBQTlCOztBQUtBLElBQUlnQixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixLQUF5QixZQUE3QixFQUEyQztBQUN6Q3JCLEVBQUFBLGNBQWMsQ0FBQ3NCLFNBQWYsR0FBMkI7QUFDekJDLElBQUFBLE1BQU0sRUFBRUMsc0JBQVVDLE1BQVYsQ0FBaUJDLFVBREE7QUFFekJ4QixJQUFBQSxFQUFFLEVBQUVzQixzQkFBVUcsTUFBVixDQUFpQkQsVUFGSTtBQUd6QnRCLElBQUFBLFdBQVcsRUFBRW9CLHNCQUFVRyxNQUhFO0FBSXpCeEIsSUFBQUEsT0FBTyxFQUFFcUIsc0JBQVVJLEtBQVYsQ0FBZ0I7QUFDdkJaLE1BQUFBLElBQUksRUFBRVEsc0JBQVVLO0FBRE8sS0FBaEIsQ0FKZ0I7QUFPekJ4QixJQUFBQSxLQUFLLEVBQUVtQixzQkFBVUcsTUFQUTtBQVF6QnJCLElBQUFBLFFBQVEsRUFBRWtCLHNCQUFVTSxJQVJLO0FBU3pCdkIsSUFBQUEsUUFBUSxFQUFFaUIsc0JBQVVNLElBVEs7QUFVekJ0QixJQUFBQSxRQUFRLEVBQUVnQixzQkFBVU0sSUFWSztBQVd6QnJCLElBQUFBLFNBQVMsRUFBRWUsc0JBQVVNLElBWEk7QUFZekJwQixJQUFBQSxRQUFRLEVBQUVjLHNCQUFVTyxJQVpLO0FBYXpCcEIsSUFBQUEsTUFBTSxFQUFFYSxzQkFBVU8sSUFiTztBQWN6Qm5CLElBQUFBLE9BQU8sRUFBRVksc0JBQVVPO0FBZE0sR0FBM0I7QUFnQkQ7O2VBRWMvQixjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5mdW5jdGlvbiBUZXh0YXJlYVdpZGdldChwcm9wcykge1xuICBjb25zdCB7XG4gICAgaWQsXG4gICAgb3B0aW9ucyxcbiAgICBwbGFjZWhvbGRlcixcbiAgICB2YWx1ZSxcbiAgICByZXF1aXJlZCxcbiAgICBkaXNhYmxlZCxcbiAgICByZWFkb25seSxcbiAgICBhdXRvZm9jdXMsXG4gICAgb25DaGFuZ2UsXG4gICAgb25CbHVyLFxuICAgIG9uRm9jdXMsXG4gIH0gPSBwcm9wcztcbiAgY29uc3QgX29uQ2hhbmdlID0gKHsgdGFyZ2V0OiB7IHZhbHVlIH0gfSkgPT4ge1xuICAgIHJldHVybiBvbkNoYW5nZSh2YWx1ZSA9PT0gXCJcIiA/IG9wdGlvbnMuZW1wdHlWYWx1ZSA6IHZhbHVlKTtcbiAgfTtcbiAgcmV0dXJuIChcbiAgICA8dGV4dGFyZWFcbiAgICAgIGlkPXtpZH1cbiAgICAgIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbFwiXG4gICAgICB2YWx1ZT17dmFsdWUgPyB2YWx1ZSA6IFwiXCJ9XG4gICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICByZXF1aXJlZD17cmVxdWlyZWR9XG4gICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICByZWFkT25seT17cmVhZG9ubHl9XG4gICAgICBhdXRvRm9jdXM9e2F1dG9mb2N1c31cbiAgICAgIHJvd3M9e29wdGlvbnMucm93c31cbiAgICAgIG9uQmx1cj17b25CbHVyICYmIChldmVudCA9PiBvbkJsdXIoaWQsIGV2ZW50LnRhcmdldC52YWx1ZSkpfVxuICAgICAgb25Gb2N1cz17b25Gb2N1cyAmJiAoZXZlbnQgPT4gb25Gb2N1cyhpZCwgZXZlbnQudGFyZ2V0LnZhbHVlKSl9XG4gICAgICBvbkNoYW5nZT17X29uQ2hhbmdlfVxuICAgIC8+XG4gICk7XG59XG5cblRleHRhcmVhV2lkZ2V0LmRlZmF1bHRQcm9wcyA9IHtcbiAgYXV0b2ZvY3VzOiBmYWxzZSxcbiAgb3B0aW9uczoge30sXG59O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFRleHRhcmVhV2lkZ2V0LnByb3BUeXBlcyA9IHtcbiAgICBzY2hlbWE6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBpZDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIHBsYWNlaG9sZGVyOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIG9wdGlvbnM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICByb3dzOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIH0pLFxuICAgIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHJlcXVpcmVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgcmVhZG9ubHk6IFByb3BUeXBlcy5ib29sLFxuICAgIGF1dG9mb2N1czogUHJvcFR5cGVzLmJvb2wsXG4gICAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uQmx1cjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Gb2N1czogUHJvcFR5cGVzLmZ1bmMsXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRleHRhcmVhV2lkZ2V0O1xuIl19