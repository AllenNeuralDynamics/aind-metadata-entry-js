export default BooleanField;
declare function BooleanField(props: any): JSX.Element;
declare namespace BooleanField {
    export const propTypes: {
        autofocus: import("prop-types").Requireable<boolean>;
        disabled: import("prop-types").Requireable<boolean>;
        errorSchema: import("prop-types").Requireable<object>;
        formData: import("prop-types").Requireable<any>;
        idSchema: import("prop-types").Requireable<object>;
        onBlur: import("prop-types").Requireable<(...args: any[]) => any>;
        onChange: import("prop-types").Validator<(...args: any[]) => any>;
        onFocus: import("prop-types").Requireable<(...args: any[]) => any>;
        rawErrors: import("prop-types").Requireable<(string | null | undefined)[]>;
        readonly: import("prop-types").Requireable<boolean>;
        registry: import("prop-types").Validator<import("prop-types").InferProps<{
            ArrayFieldTemplate: import("prop-types").Requireable<import("prop-types").ReactComponentLike>;
            FieldTemplate: import("prop-types").Requireable<import("prop-types").ReactComponentLike>;
            ObjectFieldTemplate: import("prop-types").Requireable<import("prop-types").ReactComponentLike>;
            definitions: import("prop-types").Validator<object>;
            rootSchema: import("prop-types").Requireable<object>;
            fields: import("prop-types").Validator<{
                [x: string]: string | ((props: any, context?: any) => any) | (new (props: any, context?: any) => any) | null | undefined;
            }>;
            formContext: import("prop-types").Validator<object>;
            widgets: import("prop-types").Validator<{
                [x: string]: object | null | undefined;
            }>;
        }>>;
        required: import("prop-types").Requireable<boolean>;
        schema: import("prop-types").Validator<object>;
        uiSchema: import("prop-types").Requireable<import("prop-types").InferProps<{
            "ui:options": import("prop-types").Requireable<import("prop-types").InferProps<{
                addable: import("prop-types").Requireable<boolean>;
                orderable: import("prop-types").Requireable<boolean>;
                removable: import("prop-types").Requireable<boolean>;
            }>>;
        }>>;
    };
    export const defaultProps: {
        uiSchema: {};
        disabled: boolean;
        readonly: boolean;
        autofocus: boolean;
    };
}
