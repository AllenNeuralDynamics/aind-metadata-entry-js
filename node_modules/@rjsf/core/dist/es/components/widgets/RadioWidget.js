import React from "react";
import PropTypes from "prop-types";

function RadioWidget(props) {
  var options = props.options,
      value = props.value,
      required = props.required,
      disabled = props.disabled,
      readonly = props.readonly,
      autofocus = props.autofocus,
      onBlur = props.onBlur,
      onFocus = props.onFocus,
      _onChange = props.onChange,
      id = props.id; // Generating a unique field name to identify this set of radio buttons

  var name = Math.random().toString();
  var enumOptions = options.enumOptions,
      enumDisabled = options.enumDisabled,
      inline = options.inline; // checked={checked} has been moved above name={name}, As mentioned in #349;
  // this is a temporary fix for radio button rendering bug in React, facebook/react#7630.

  return (
    /*#__PURE__*/
    React.createElement("div", {
      className: "field-radio-group",
      id: id
    }, enumOptions.map(function (option, i) {
      var checked = option.value === value;
      var itemDisabled = enumDisabled && enumDisabled.indexOf(option.value) != -1;
      var disabledCls = disabled || itemDisabled || readonly ? "disabled" : "";
      var radio =
      /*#__PURE__*/
      React.createElement("span", null,
      /*#__PURE__*/
      React.createElement("input", {
        type: "radio",
        checked: checked,
        name: name,
        required: required,
        value: option.value,
        disabled: disabled || itemDisabled || readonly,
        autoFocus: autofocus && i === 0,
        onChange: function onChange(_) {
          return _onChange(option.value);
        },
        onBlur: onBlur && function (event) {
          return onBlur(id, event.target.value);
        },
        onFocus: onFocus && function (event) {
          return onFocus(id, event.target.value);
        }
      }),
      /*#__PURE__*/
      React.createElement("span", null, option.label));
      return inline ?
      /*#__PURE__*/
      React.createElement("label", {
        key: i,
        className: "radio-inline ".concat(disabledCls)
      }, radio) :
      /*#__PURE__*/
      React.createElement("div", {
        key: i,
        className: "radio ".concat(disabledCls)
      },
      /*#__PURE__*/
      React.createElement("label", null, radio));
    }))
  );
}

RadioWidget.defaultProps = {
  autofocus: false
};

if (process.env.NODE_ENV !== "production") {
  RadioWidget.propTypes = {
    schema: PropTypes.object.isRequired,
    id: PropTypes.string.isRequired,
    options: PropTypes.shape({
      enumOptions: PropTypes.array,
      inline: PropTypes.bool
    }).isRequired,
    value: PropTypes.any,
    required: PropTypes.bool,
    disabled: PropTypes.bool,
    readonly: PropTypes.bool,
    autofocus: PropTypes.bool,
    onChange: PropTypes.func
  };
}

export default RadioWidget;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvUmFkaW9XaWRnZXQuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJQcm9wVHlwZXMiLCJSYWRpb1dpZGdldCIsInByb3BzIiwib3B0aW9ucyIsInZhbHVlIiwicmVxdWlyZWQiLCJkaXNhYmxlZCIsInJlYWRvbmx5IiwiYXV0b2ZvY3VzIiwib25CbHVyIiwib25Gb2N1cyIsIm9uQ2hhbmdlIiwiaWQiLCJuYW1lIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwiZW51bU9wdGlvbnMiLCJlbnVtRGlzYWJsZWQiLCJpbmxpbmUiLCJtYXAiLCJvcHRpb24iLCJpIiwiY2hlY2tlZCIsIml0ZW1EaXNhYmxlZCIsImluZGV4T2YiLCJkaXNhYmxlZENscyIsInJhZGlvIiwiXyIsImV2ZW50IiwidGFyZ2V0IiwibGFiZWwiLCJkZWZhdWx0UHJvcHMiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJwcm9wVHlwZXMiLCJzY2hlbWEiLCJvYmplY3QiLCJpc1JlcXVpcmVkIiwic3RyaW5nIiwic2hhcGUiLCJhcnJheSIsImJvb2wiLCJhbnkiLCJmdW5jIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0Qjs7QUFFQSxTQUFTQyxXQUFULENBQXFCQyxLQUFyQixFQUE0QjtBQUFBLE1BRXhCQyxPQUZ3QixHQVl0QkQsS0Fac0IsQ0FFeEJDLE9BRndCO0FBQUEsTUFHeEJDLEtBSHdCLEdBWXRCRixLQVpzQixDQUd4QkUsS0FId0I7QUFBQSxNQUl4QkMsUUFKd0IsR0FZdEJILEtBWnNCLENBSXhCRyxRQUp3QjtBQUFBLE1BS3hCQyxRQUx3QixHQVl0QkosS0Fac0IsQ0FLeEJJLFFBTHdCO0FBQUEsTUFNeEJDLFFBTndCLEdBWXRCTCxLQVpzQixDQU14QkssUUFOd0I7QUFBQSxNQU94QkMsU0FQd0IsR0FZdEJOLEtBWnNCLENBT3hCTSxTQVB3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QUFNLEVBQUVyQyxTQUFTLENBQUNzQyxNQUFWLENBQWlCQyxVQURIO0FBRXRCM0IsSUFBQUEsRUFBRSxFQUFFWixTQUFTLENBQUN3QyxNQUFWLENBQWlCRCxVQUZDO0FBR3RCcEMsSUFBQUEsT0FBTyxFQUFFSCxTQUFTLENBQUN5QyxLQUFWLENBQWdCO0FBQ3ZCeEIsTUFBQUEsV0FBVyxFQUFFakIsU0FBUyxDQUFDMEMsS0FEQTtBQUV2QnZCLE1BQUFBLE1BQU0sRUFBRW5CLFNBQVMsQ0FBQzJDO0FBRkssS0FBaEIsRUFHTkosVUFObUI7QUFPdEJuQyxJQUFBQSxLQUFLLEVBQUVKLFNBQVMsQ0FBQzRDLEdBUEs7QUFRdEJ2QyxJQUFBQSxRQUFRLEVBQUVMLFNBQVMsQ0FBQzJDLElBUkU7QUFTdEJyQyxJQUFBQSxRQUFRLEVBQUVOLFNBQVMsQ0FBQzJDLElBVEU7QUFVdEJwQyxJQUFBQSxRQUFRLEVBQUVQLFNBQVMsQ0FBQzJDLElBVkU7QUFXdEJuQyxJQUFBQSxTQUFTLEVBQUVSLFNBQVMsQ0FBQzJDLElBWEM7QUFZdEJoQyxJQUFBQSxRQUFRLEVBQUVYLFNBQVMsQ0FBQzZDO0FBWkUsR0FBeEI7QUFjRDs7QUFDRCxlQUFlNUMsV0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcblxuZnVuY3Rpb24gUmFkaW9XaWRnZXQocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIG9wdGlvbnMsXG4gICAgdmFsdWUsXG4gICAgcmVxdWlyZWQsXG4gICAgZGlzYWJsZWQsXG4gICAgcmVhZG9ubHksXG4gICAgYXV0b2ZvY3VzLFxuICAgIG9uQmx1cixcbiAgICBvbkZvY3VzLFxuICAgIG9uQ2hhbmdlLFxuICAgIGlkLFxuICB9ID0gcHJvcHM7XG4gIC8vIEdlbmVyYXRpbmcgYSB1bmlxdWUgZmllbGQgbmFtZSB0byBpZGVudGlmeSB0aGlzIHNldCBvZiByYWRpbyBidXR0b25zXG4gIGNvbnN0IG5hbWUgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKCk7XG4gIGNvbnN0IHsgZW51bU9wdGlvbnMsIGVudW1EaXNhYmxlZCwgaW5saW5lIH0gPSBvcHRpb25zO1xuICAvLyBjaGVja2VkPXtjaGVja2VkfSBoYXMgYmVlbiBtb3ZlZCBhYm92ZSBuYW1lPXtuYW1lfSwgQXMgbWVudGlvbmVkIGluICMzNDk7XG4gIC8vIHRoaXMgaXMgYSB0ZW1wb3JhcnkgZml4IGZvciByYWRpbyBidXR0b24gcmVuZGVyaW5nIGJ1ZyBpbiBSZWFjdCwgZmFjZWJvb2svcmVhY3QjNzYzMC5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZpZWxkLXJhZGlvLWdyb3VwXCIgaWQ9e2lkfT5cbiAgICAgIHtlbnVtT3B0aW9ucy5tYXAoKG9wdGlvbiwgaSkgPT4ge1xuICAgICAgICBjb25zdCBjaGVja2VkID0gb3B0aW9uLnZhbHVlID09PSB2YWx1ZTtcbiAgICAgICAgY29uc3QgaXRlbURpc2FibGVkID1cbiAgICAgICAgICBlbnVtRGlzYWJsZWQgJiYgZW51bURpc2FibGVkLmluZGV4T2Yob3B0aW9uLnZhbHVlKSAhPSAtMTtcbiAgICAgICAgY29uc3QgZGlzYWJsZWRDbHMgPVxuICAgICAgICAgIGRpc2FibGVkIHx8IGl0ZW1EaXNhYmxlZCB8fCByZWFkb25seSA/IFwiZGlzYWJsZWRcIiA6IFwiXCI7XG4gICAgICAgIGNvbnN0IHJhZGlvID0gKFxuICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJyYWRpb1wiXG4gICAgICAgICAgICAgIGNoZWNrZWQ9e2NoZWNrZWR9XG4gICAgICAgICAgICAgIG5hbWU9e25hbWV9XG4gICAgICAgICAgICAgIHJlcXVpcmVkPXtyZXF1aXJlZH1cbiAgICAgICAgICAgICAgdmFsdWU9e29wdGlvbi52YWx1ZX1cbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkIHx8IGl0ZW1EaXNhYmxlZCB8fCByZWFkb25seX1cbiAgICAgICAgICAgICAgYXV0b0ZvY3VzPXthdXRvZm9jdXMgJiYgaSA9PT0gMH1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e18gPT4gb25DaGFuZ2Uob3B0aW9uLnZhbHVlKX1cbiAgICAgICAgICAgICAgb25CbHVyPXtvbkJsdXIgJiYgKGV2ZW50ID0+IG9uQmx1cihpZCwgZXZlbnQudGFyZ2V0LnZhbHVlKSl9XG4gICAgICAgICAgICAgIG9uRm9jdXM9e29uRm9jdXMgJiYgKGV2ZW50ID0+IG9uRm9jdXMoaWQsIGV2ZW50LnRhcmdldC52YWx1ZSkpfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxzcGFuPntvcHRpb24ubGFiZWx9PC9zcGFuPlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgKTtcblxuICAgICAgICByZXR1cm4gaW5saW5lID8gKFxuICAgICAgICAgIDxsYWJlbCBrZXk9e2l9IGNsYXNzTmFtZT17YHJhZGlvLWlubGluZSAke2Rpc2FibGVkQ2xzfWB9PlxuICAgICAgICAgICAge3JhZGlvfVxuICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgPGRpdiBrZXk9e2l9IGNsYXNzTmFtZT17YHJhZGlvICR7ZGlzYWJsZWRDbHN9YH0+XG4gICAgICAgICAgICA8bGFiZWw+e3JhZGlvfTwvbGFiZWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgICB9KX1cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuUmFkaW9XaWRnZXQuZGVmYXVsdFByb3BzID0ge1xuICBhdXRvZm9jdXM6IGZhbHNlLFxufTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSYWRpb1dpZGdldC5wcm9wVHlwZXMgPSB7XG4gICAgc2NoZW1hOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgaWQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBvcHRpb25zOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgZW51bU9wdGlvbnM6IFByb3BUeXBlcy5hcnJheSxcbiAgICAgIGlubGluZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgfSkuaXNSZXF1aXJlZCxcbiAgICB2YWx1ZTogUHJvcFR5cGVzLmFueSxcbiAgICByZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgIHJlYWRvbmx5OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBhdXRvZm9jdXM6IFByb3BUeXBlcy5ib29sLFxuICAgIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbiAgfTtcbn1cbmV4cG9ydCBkZWZhdWx0IFJhZGlvV2lkZ2V0O1xuIl19