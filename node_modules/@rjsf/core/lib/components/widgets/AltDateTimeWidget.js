function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import PropTypes from "prop-types";
import AltDateWidget from "./AltDateWidget";

function AltDateTimeWidget(props) {
  var AltDateWidget = props.registry.widgets.AltDateWidget;
  return (
    /*#__PURE__*/
    React.createElement(AltDateWidget, _extends({
      time: true
    }, props))
  );
}

if (process.env.NODE_ENV !== "production") {
  AltDateTimeWidget.propTypes = {
    schema: PropTypes.object.isRequired,
    id: PropTypes.string.isRequired,
    value: PropTypes.string,
    required: PropTypes.bool,
    onChange: PropTypes.func,
    options: PropTypes.object
  };
}

AltDateTimeWidget.defaultProps = _objectSpread({}, AltDateWidget.defaultProps, {
  time: true
});
export default AltDateTimeWidget;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3dpZGdldHMvQWx0RGF0ZVRpbWVXaWRnZXQuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJQcm9wVHlwZXMiLCJBbHREYXRlV2lkZ2V0IiwiQWx0RGF0ZVRpbWVXaWRnZXQiLCJwcm9wcyIsInJlZ2lzdHJ5Iiwid2lkZ2V0cyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInByb3BUeXBlcyIsInNjaGVtYSIsIm9iamVjdCIsImlzUmVxdWlyZWQiLCJpZCIsInN0cmluZyIsInZhbHVlIiwicmVxdWlyZWQiLCJib29sIiwib25DaGFuZ2UiLCJmdW5jIiwib3B0aW9ucyIsImRlZmF1bHRQcm9wcyIsInRpbWUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsYUFBUCxNQUEwQixpQkFBMUI7O0FBRUEsU0FBU0MsaUJBQVQsQ0FBMkJDLEtBQTNCLEVBQWtDO0FBQUEsTUFDeEJGLGFBRHdCLEdBQ05FLEtBQUssQ0FBQ0MsUUFBTixDQUFlQyxPQURULENBQ3hCSixhQUR3QjtBQUVoQztBQUFBO0FBQU8sd0JBQUMsYUFBRDtBQUFlLE1BQUEsSUFBSTtBQUFuQixPQUF3QkUsS0FBeEI7QUFBUDtBQUNEOztBQUVELElBQUlHLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQTdCLEVBQTJDO0FBQ3pDTixFQUFBQSxpQkFBaUIsQ0FBQ08sU0FBbEIsR0FBOEI7QUFDNUJDLElBQUFBLE1BQU0sRUFBRVYsU0FBUyxDQUFDVyxNQUFWLENBQWlCQyxVQURHO0FBRTVCQyxJQUFBQSxFQUFFLEVBQUViLFNBQVMsQ0FBQ2MsTUFBVixDQUFpQkYsVUFGTztBQUc1QkcsSUFBQUEsS0FBSyxFQUFFZixTQUFTLENBQUNjLE1BSFc7QUFJNUJFLElBQUFBLFFBQVEsRUFBRWhCLFNBQVMsQ0FBQ2lCLElBSlE7QUFLNUJDLElBQUFBLFFBQVEsRUFBRWxCLFNBQVMsQ0FBQ21CLElBTFE7QUFNNUJDLElBQUFBLE9BQU8sRUFBRXBCLFNBQVMsQ0FBQ1c7QUFOUyxHQUE5QjtBQVFEOztBQUVEVCxpQkFBaUIsQ0FBQ21CLFlBQWxCLHFCQUNLcEIsYUFBYSxDQUFDb0IsWUFEbkI7QUFFRUMsRUFBQUEsSUFBSSxFQUFFO0FBRlI7QUFLQSxlQUFlcEIsaUJBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgQWx0RGF0ZVdpZGdldCBmcm9tIFwiLi9BbHREYXRlV2lkZ2V0XCI7XG5cbmZ1bmN0aW9uIEFsdERhdGVUaW1lV2lkZ2V0KHByb3BzKSB7XG4gIGNvbnN0IHsgQWx0RGF0ZVdpZGdldCB9ID0gcHJvcHMucmVnaXN0cnkud2lkZ2V0cztcbiAgcmV0dXJuIDxBbHREYXRlV2lkZ2V0IHRpbWUgey4uLnByb3BzfSAvPjtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBBbHREYXRlVGltZVdpZGdldC5wcm9wVHlwZXMgPSB7XG4gICAgc2NoZW1hOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgaWQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICByZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wsXG4gICAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9wdGlvbnM6IFByb3BUeXBlcy5vYmplY3QsXG4gIH07XG59XG5cbkFsdERhdGVUaW1lV2lkZ2V0LmRlZmF1bHRQcm9wcyA9IHtcbiAgLi4uQWx0RGF0ZVdpZGdldC5kZWZhdWx0UHJvcHMsXG4gIHRpbWU6IHRydWUsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBBbHREYXRlVGltZVdpZGdldDtcbiJdfQ==